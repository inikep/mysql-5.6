source ../include/raft_3_node.inc;

connection server_2;
let $master_uuid2 = query_get_value(SHOW SLAVE STATUS, Master_UUID, 1);
let $uuid2 = `select @@server_uuid`;

connection server_1;
let $uuid1 = `select @@server_uuid`;
if ($master_uuid2 != $uuid1)
{
  echo 'Master_UUID: $master_uuid2' <> 'server_uuid: $uuid1';
  die Failed because Master_UUID is not equal to server_uuid;
}
replace_result $uuid2 uuid2;
eval SET @@GLOBAL.RPL_RAFT_NEW_LEADER_UUID="$uuid2";

# wait for new leader to become writable
connection server_2;
let $rpl_connection_name = server_2;
source include/rpl_connection.inc;
let $max_sleep = 300;
while (!$_leader_writeable) {
  let $_leader_writeable = `SELECT @@GLOBAL.READ_ONLY =
      0 AND @@GLOBAL.SUPER_READ_ONLY = 0`;
  sleep 1;
  let $max_sleep = $max_sleep - 1;
  if ($max_sleep == 0) {
    die "Timeout while waiting for read_only = 0 on leader";
  }
}

connection server_1;
let $master_uuid1 = query_get_value(SHOW SLAVE STATUS, Master_UUID, 1);
if ($master_uuid1 != $uuid2)
{
  echo 'Master_UUID: $master_uuid1' <> 'server_uuid: $uuid2';
  die Failed because Master_UUID is not equal to server_uuid;
}

connection server_2;
replace_result $uuid1 uuid1;
eval set @@GLOBAL.RPL_RAFT_NEW_LEADER_UUID="$uuid1";

source include/rpl_end.inc;
